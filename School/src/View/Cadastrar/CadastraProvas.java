/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Cadastrar;

import DAO.AssuntoDAO;
import DAO.DificuldadeDAO;
import DAO.ProfessorDisciplinaDAO;
import DAO.ProvaDAO;
import DAO.QuestaoDAO;
import Model.Assunto;
import Model.Dificuldade;
import Model.Disciplina;
import Model.Prova;
import Model.Questao;
import Model.QuestaoDescritiva;
import Model.QuestaoMultiplaEscolha;
import Model.Session;
import View.Alterar.AlterarQuestao;
import View.Consultar.ConsultaQuestaoDeProva;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import school.PrepareIcon;

/**
 *
 * @author adria
 */
public class CadastraProvas extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastraProvas
     */
    List<Questao> listaDeQuest = new ArrayList<>();
    boolean Carregado = false;
    boolean mostrargabarito = false;

    public CadastraProvas() {
        initComponents();
        preparaCombos();
        atualizarDadosQuestoes();
        updateQuestaoNumber();

    }

    private void preparaCombos() {
        prepararComboDisciplina();
        prepararComboAssunto();
        prepararComboNivel();
        Carregado = true;

    }

    private void prepararComboDisciplina() {
        int id = Session.getInstance().getUsuario().getIdUsuario();
        for (Disciplina disc : new ProfessorDisciplinaDAO().ListarDisciplinaDeProfessor(id)) {
            ComboDisc.addItem(disc);

        }
    }

    private void prepararComboAssunto() {
        ComboAssunto.removeAllItems();
        Disciplina disc = (Disciplina) ComboDisc.getSelectedItem();
        for (Assunto as : new AssuntoDAO().listarAssuntoByIdDisciplina(disc.getId())) {
            ComboAssunto.addItem(as);
        }

    }

    private void prepararComboNivel() {
        Dificuldade mostrartodas = new Dificuldade();
        mostrartodas.setId(-1);//mesma coisa do código da classe acima
        mostrartodas.setDificuldade("Mostrar todas as dificuldades");
        ComboNivel.addItem(mostrartodas);
        List<Dificuldade> dificuldades = new DificuldadeDAO().ListarDificuldades();
        for (Dificuldade dif : dificuldades) {
            ComboNivel.addItem(dif);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboDisc = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ComboAssunto = new javax.swing.JComboBox<>();
        saveButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        questaoText = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        botaoDireita = new javax.swing.JButton();
        botaoEsquerda = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ComboNivel = new javax.swing.JComboBox<>();
        nomeProva = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        mostrarItens = new javax.swing.JCheckBox();
        codigoField = new javax.swing.JTextField();
        botaoListarQuestoes = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        numQuest = new javax.swing.JTextField();

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(690, 530));
        setMinimumSize(new java.awt.Dimension(690, 530));
        setPreferredSize(new java.awt.Dimension(690, 530));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 119, 36));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cadastro de Provas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jLabel1)
                .addContainerGap(532, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-10, 0, 1010, 77);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Disciplina :");

        ComboDisc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboDiscItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Assunto :");

        ComboAssunto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboAssuntoItemStateChanged(evt);
            }
        });

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.png"))); // NOI18N
        saveButton.setToolTipText("Salvar Prova");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        questaoText.setEditable(false);
        questaoText.setBackground(new java.awt.Color(240, 240, 240));
        questaoText.setColumns(20);
        questaoText.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        questaoText.setLineWrap(true);
        questaoText.setRows(5);
        jScrollPane3.setViewportView(questaoText);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("código:");

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/adicionar.png"))); // NOI18N
        addButton.setToolTipText("Adicionar  Questao");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        botaoDireita.setText(">>>");
        botaoDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDireitaActionPerformed(evt);
            }
        });

        botaoEsquerda.setText("<<<");
        botaoEsquerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEsquerdaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Nivel :");

        ComboNivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboNivelItemStateChanged(evt);
            }
        });

        nomeProva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeProvaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Nome da prova:");

        mostrarItens.setText("Mostrar Gabarito/Resposta esperada");
        mostrarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarItensActionPerformed(evt);
            }
        });

        codigoField.setEditable(false);
        codigoField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        botaoListarQuestoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Questao32px.png"))); // NOI18N
        botaoListarQuestoes.setToolTipText("Mostrar Questões");
        botaoListarQuestoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoListarQuestoesActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Nº da questão");

        numQuest.setEditable(false);
        numQuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numQuestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeProva, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(numQuest, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboAssunto, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ComboNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(botaoEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(botaoDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(codigoField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mostrarItens)
                                .addGap(69, 69, 69))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoListarQuestoes, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboAssunto)
                    .addComponent(ComboNivel)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(ComboDisc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeProva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(numQuest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(codigoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mostrarItens))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botaoEsquerda, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoDireita, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoListarQuestoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 680, 440);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboDiscItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboDiscItemStateChanged
        // TODO add your handling code here:
        prepararComboAssunto();
        atualizarDadosQuestoes();

    }//GEN-LAST:event_ComboDiscItemStateChanged
    List<QuestaoMultiplaEscolha> questoesme = new ArrayList<>();
    List<QuestaoDescritiva> questoesd = new ArrayList<>();

    private void atualizarListaDeQuestoes(int dificuldadeid, int assuntoid) {
        System.out.println("atualizarLista de questões\n");
        resetCounters();
        for (int numero : new QuestaoDAO().getQuestaoIdList(dificuldadeid, assuntoid)) {
            if (new QuestaoDAO().checkIfHasItens(numero)) {
                questoesme.add(new QuestaoDAO().getQuestaoMultiplaEscolha(numero));

            } else {
                questoesd.add(new QuestaoDAO().getQuestaoById(numero));

            }

        }
        for (Questao a : questoesme) {
            System.out.println(a.getIdQuestao());
            System.out.println(questoesme.size());
        }
        for (Questao a : questoesd) {
            System.out.println(a.getIdQuestao());
            System.out.println(questoesd.size());
        }

    }

    private void atualizarDadosQuestoes() {
        limparTudo();
        int idassunto;

        if (ComboAssunto.getItemCount() > 0 && ComboNivel.getItemCount() > 0) {
            if (ComboAssunto.getItemCount() != 0) {
                idassunto = ((Assunto) ComboAssunto.getSelectedItem()).getIdAssunto();
            } else {
                return;
            }
            int idificuldade = ((Dificuldade) ComboNivel.getSelectedItem()).getId();
            atualizarListaDeQuestoes(idificuldade, idassunto);
        }

    }

    private void limparTudo() {
        questoesme.clear();
        questoesd.clear();
        controleDescritiva = 0;
        controleMultiplaEscolha = 0;
        // System.out.println(questoesme.size() + " " + questoesd.size());
        resposta = "";
        quest = null;
        questaoText.setText("");

    }
    private void ComboAssuntoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboAssuntoItemStateChanged
        atualizarDadosQuestoes();

    }//GEN-LAST:event_ComboAssuntoItemStateChanged
    int controleMultiplaEscolha = 0;
    int controleDescritiva = 0;
    String resposta = "";
    String questao = "";
    Questao quest;

    private void resetCounters() {
        controleMultiplaEscolha = 0;
        controleDescritiva = 0;
    }
    private void botaoDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDireitaActionPerformed
        // TODO add your handling code here:
        quest = null;
        if (controleMultiplaEscolha < 0 || controleDescritiva < 0) {
            controleMultiplaEscolha = 0;
            controleDescritiva = 0;
        }
        questao = "";
       // System.out.println("Tamanho do array multipla escolha:" + questoesme.size());
        //System.out.println("Tamanho do array Descritiva:" + questoesd.size());
        boolean mostrandoMe = false;
        if (controleMultiplaEscolha < questoesme.size()) {
            QuestaoMultiplaEscolha q = questoesme.get(controleMultiplaEscolha);
            mostrarMultiplaEscolha(q);
            controleMultiplaEscolha++;
            mostrandoMe = true;
        }
        if (controleDescritiva < questoesd.size() && !mostrandoMe) {
            // System.out.println(questoesd.size());
            QuestaoDescritiva q = questoesd.get(controleDescritiva);
            mostrarDescritiva(q);
            controleDescritiva++;

        }

        if (!questao.trim().isEmpty()) {
            questaoText.setText(questao);
        }

    }//GEN-LAST:event_botaoDireitaActionPerformed

    private void botaoEsquerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEsquerdaActionPerformed
        quest = null;
        questao = "";

        if (controleDescritiva > 0) {
            controleDescritiva--;
            QuestaoDescritiva q = questoesd.get(controleDescritiva);
            mostrarDescritiva(q);
        } else if (controleMultiplaEscolha > 0) {
            controleMultiplaEscolha--;
            QuestaoMultiplaEscolha q = questoesme.get(controleMultiplaEscolha);
            mostrarMultiplaEscolha(q);
        }

        if (!questao.trim().isEmpty()) {
            questaoText.setText(questao);
        }
    }//GEN-LAST:event_botaoEsquerdaActionPerformed
    private void mostrarMultiplaEscolha(QuestaoMultiplaEscolha q) {
        String enunciado = q.getEnunciado();
        String[] itens = q.getItens();
        questao += enunciado + " \n";
        questao += "A) " + itens[0] + " \n";
        questao += "B) " + itens[1] + " \n";
        questao += "C) " + itens[2] + " \n";
        questao += "D) " + itens[3] + " \n";
        questao += "E) " + itens[4] + " \n";
        resposta = Character.toString(q.getGabarito());
        codigoField.setText(String.valueOf(q.getIdQuestao()));
        quest = q;
        mostrarItensActionPerformed(null);
    }

    private void mostrarDescritiva(QuestaoDescritiva q) {

        String enunciado = q.getEnunciado();
        questao += enunciado + " \n";
        resposta = q.getResposta();
        codigoField.setText(String.valueOf(q.getIdQuestao()));
        // System.out.println(q.getEnunciado());
        quest = q;
        mostrarItensActionPerformed(null);
    }
    private void mostrarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarItensActionPerformed
        // TODO add your handling code here:
        mostrargabarito = mostrarItens.isSelected();
        String questaocomresposta=questaoText.getText() + "\n Resposta: " + resposta;
        if (mostrargabarito) {
           // oldquestao = questaoText.getText();
            questaoText.setText(questaocomresposta);
        } else {
            questaoText.setText(questao);
        }
    }//GEN-LAST:event_mostrarItensActionPerformed

    private void ComboNivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboNivelItemStateChanged
        // TODO add your handling code here:
        atualizarDadosQuestoes();
    }//GEN-LAST:event_ComboNivelItemStateChanged

    private void nomeProvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeProvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeProvaActionPerformed
    private boolean addQuestaoNaLista(Questao q) {
        for (Questao que : listaDeQuest) {
            if (que.equals(q)) {
                JOptionPane.showMessageDialog(rootPane, "Não é possivel adicionar \n "
                        + "duas questões iguais", title, JOptionPane.ERROR_MESSAGE);
                return false;

            }
        }
        listaDeQuest.add(q);
        return true;
    }
    int cleito = 1;

    private void updateQuestaoNumber() {

        numQuest.setText("" + cleito);
    }
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        if (quest == null) {
            JOptionPane.showMessageDialog(rootPane, "Não é possível cadastrar uma questão nula",
                    title, JOptionPane.ERROR_MESSAGE);
            return;
        }
        quest.setNumero(cleito);
        if (addQuestaoNaLista(quest)) {
            cleito++;
        }
        updateQuestaoNumber();
    }//GEN-LAST:event_addButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (listaDeQuest.isEmpty() || nomeProva.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Não existem questões nessa prova"
                    + " e/Ou o campo de nome está vazio",
                    title, JOptionPane.ERROR_MESSAGE);

        } else {
            String nprova = nomeProva.getText();
            Date dataSistema = new Date();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/YYYY");
            String data = formato.format(dataSistema);
            Prova p = new Prova();
            p.setData(data);
            p.setNome(nprova);
            p.setQuestoes(listaDeQuest);
            p.setUsuarioCriadorId(Session.getInstance().getUsuario().getIdUsuario());
            new ProvaDAO().inserirProva(p);
            this.dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void botaoListarQuestoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoListarQuestoesActionPerformed
        ConsultaQuestaoDeProva cqp = new ConsultaQuestaoDeProva(listaDeQuest);
        Principal.Principal.Desktop.add(cqp);
        cqp.show();
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoListarQuestoesActionPerformed

    private void numQuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numQuestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numQuestActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Assunto> ComboAssunto;
    private javax.swing.JComboBox<Disciplina> ComboDisc;
    private javax.swing.JComboBox<Dificuldade> ComboNivel;
    private javax.swing.JButton addButton;
    private javax.swing.JButton botaoDireita;
    private javax.swing.JButton botaoEsquerda;
    private javax.swing.JButton botaoListarQuestoes;
    private javax.swing.JTextField codigoField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JCheckBox mostrarItens;
    private javax.swing.JTextField nomeProva;
    private javax.swing.JTextField numQuest;
    private javax.swing.JTextArea questaoText;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
